ADMIN DASHBOARD STRUCTURE & STYLING DESCRIPTION

1. SECTION: Header
Requirement: Fixed section at the top of the page for branding and theme toggle
Elements Inside:
- Title (<h2>Admin Dashboard>)
- Theme Toggle (Label + Checkbox input)

CSS Properties & Effects:
- background-color: var(--header-footer-bg); → Green in light mode, dark gray in dark mode
- color: white; → Ensures text contrast
- display: flex; justify-content: space-between; → Positions title and toggle at opposite ends
- padding: 0 15px; → Adds horizontal spacing

2. SECTION: Sidebar (Navigation)
Requirement: Provides navigation links for dashboard sections
Elements Inside:
- Three links: Home, Users, Settings

CSS Properties & Effects:
- background-color: var(--sidebar-bg); → Light gray in light mode, darker tone in dark mode
- padding: 20px; → Adds internal spacing
Links:
  - text-decoration: underline; → Makes links visually distinct
  - color: purple; → Gives links a standout color

3. SECTION: Main Content Area
Requirement: Dynamic content area for admin use
Elements Inside:
- Welcome Heading
- Placeholder text paragraph

CSS Properties & Effects:
- padding: 20px; → Ensures content has room to breathe
- Located using grid-area: main; in grid layout

4. SECTION: Footer
Requirement: Fixed footer at the bottom of the layout
Content:
- Static copyright

CSS Properties & Effects:
- background-color: var(--header-footer-bg); → Matches header
- color: white; → Ensures contrast
- text-align: center; and line-height: 40px; → Centers content vertically and horizontally

5. THEME TOGGLE FEATURE
Requirement: Allow users to switch between light and dark themes
Implementation:
- Checkbox input in header toggles dark class on <body>
- CSS variables change based on class applied

Dark Mode Adjustments:
- --bg-color: #1e1e1e; → Dark background
- --text-color: #f2f2f2; → Light text
- --sidebar-bg and --header-footer-bg darken accordingly

6. CSS GRID LAYOUT
Purpose: Organizes the page into header, sidebar, main, and footer using named grid areas
Desktop Layout:
"header header"
"sidebar main"
"footer footer"
Mobile Responsive Layout:
Uses media query for max-width: 600px
Stacks sections vertically:
"header"
"main"
"sidebar"
"footer"

7. RESPONSIVE DESIGN
Requirement: Ensure dashboard adapts to small screen devices
Implementation:
- Media queries re-arrange layout
- Grid changes from two-column to one-column layout
- Sidebar moves below main content

LEARNING OUTCOMES:
1. How to structure a responsive admin dashboard using CSS Grid
2. Implemented theme toggling using CSS variables and JavaScript
3. Understood how to style reusable layout sections (header, nav, main, footer)
4. Practiced responsive design techniques with media queries